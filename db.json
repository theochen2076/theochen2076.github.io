{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1582087477939},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1582087477939},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1582087477939},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1582087477939},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1582087477940},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1582087477950},{"_id":"source/_posts/kotlin.md","hash":"f233bc8c502bfea35212fd5cb7d5a4741cf97d67","modified":1582088284569},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1582087477941},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1582087477940},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1582087477941},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1582087477940},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1582087477941},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1582087477941},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1582087477941},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1582087477942},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1582087477942},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1582087477942},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1582087477942},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1582087477951},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1582087477942},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1582087477950},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1582087477949},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1582087477949},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1582087477949},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1582087477949},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1582087477950},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1582087477950},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1582087477944},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1582087477944},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1582087477944},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1582087477943},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1582087477945},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1582087477944},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1582087477943},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1582087477943},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1582087477945},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1582087477945},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1582087477947},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1582087477948},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1582087477948},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1582087477947},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1582087477948},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1582087477948},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1582087477951},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1582087477954},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1582087477960},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1582087477960},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1582087477961},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1582087477961},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1582087477961},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1582087477960},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1582087477964},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1582087477961},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1582087477965},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1582087477965},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1582087477964},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1582087477946},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1582087477946},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1582087477946},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1582087477946},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1582087477947},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1582087477947},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1582087477952},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1582087477952},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1582087477951},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1582087477952},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1582087477953},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1582087477953},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1582087477952},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1582087477953},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1582087477953},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1582087477954},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1582087477953},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1582087477954},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1582087477955},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1582087477958},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1582087477955},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1582087477962},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1582087477962},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1582087477962},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1582087477962},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1582087477963},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1582087477963},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1582087477957},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1582087477957},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1582087477960},{"_id":"public/archives/index.html","hash":"edaa8c7ba160ce26f80f0ca0640ef22dda3b1026","modified":1582090562035},{"_id":"public/archives/2020/index.html","hash":"7e2d11dfc1c8abfcbcd23950db424f482eaf16aa","modified":1582090562035},{"_id":"public/archives/2020/02/index.html","hash":"478022a68cd0ad512f24957c05edd71b2f969b25","modified":1582090562035},{"_id":"public/2020/02/19/kotlin/index.html","hash":"c9a76979b0c73587d8c69ee15fb18a61960fc2ae","modified":1582090562035},{"_id":"public/index.html","hash":"31e8a5322216c005b6e3b212982e012b4724f16a","modified":1582091549671},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1582088388679},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1582088388679},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1582088388679},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1582088388679},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1582088388679},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1582088388679},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1582088388679},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1582088388679},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1582088388679},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1582088388679},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1582088388679},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1582088388679},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1582088388679},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1582088388679},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1582088388679},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1582088388679},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1582088388679},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1582088388679},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1582088388679},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1582088388679},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1582088388679},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1582088388679},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1582088388679},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1582088666392},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1582088666392},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1582088666392},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1582088666395},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1582088666395},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1582088666395},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1582088666395},{"_id":"themes/next/README.md","hash":"d3035c6961280c1b4afb3a07661f5a635ce1eaff","modified":1582088666395},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1582088666396},{"_id":"themes/next/_config.yml","hash":"030f7bc7ef9d7578eded29bbf31c90d596a0187b","modified":1582088666396},{"_id":"themes/next/gulpfile.js","hash":"72e6d5a6e32d5f95d82e4c4d0c963d39555bb760","modified":1582088666401},{"_id":"themes/next/package.json","hash":"42cadbbe64ebbc2ddf55854f9b61d28289ae9380","modified":1582088666420},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"1b87a7d22d466d78856900bd94875944181c991a","modified":1582088666393},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1582088666392},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"715dcf9b0429a4a4c7107d6d1d00a34e4cf9aa99","modified":1582088666393},{"_id":"themes/next/.github/config.yml","hash":"e4f4b9afe59bc508c4f7634895b33d7d460a7cb1","modified":1582088666394},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1582088666394},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1582088666394},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1582088666394},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1582088666394},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1582088666394},{"_id":"themes/next/.github/stale.yml","hash":"941209526c2f7d916c76163c9e1ac1af9d956679","modified":1582088666394},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1582088666395},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1582088666397},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1582088666396},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1582088666397},{"_id":"themes/next/docs/DATA-FILES.md","hash":"40a8089076005e0d26ef7c0db58a2b5b464cda6c","modified":1582088666397},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"08cda41b4bcf687facfda19ab39718ec7a05ae54","modified":1582088666397},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1582088666397},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1582088666398},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"682937d48bf5d243842a76190921322e26c75247","modified":1582088666398},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1582088666398},{"_id":"themes/next/languages/de.yml","hash":"109943f7adcd5cdbe4c6c95c9d279603f07edacb","modified":1582088666402},{"_id":"themes/next/languages/default.yml","hash":"20f951dc4df8602ffdd05a1d5899c5a9bc1759cc","modified":1582088666402},{"_id":"themes/next/languages/es.yml","hash":"53ef4a621fd628748b8ed711fe86080e9c9c91c8","modified":1582088666402},{"_id":"themes/next/languages/en.yml","hash":"20f951dc4df8602ffdd05a1d5899c5a9bc1759cc","modified":1582088666402},{"_id":"themes/next/languages/fa.yml","hash":"a24e0cf28e9f137d0d2219498778693c3c3960b2","modified":1582088666403},{"_id":"themes/next/languages/fr.yml","hash":"578a30a51b9ecbbcb4c200362ad9a37ffd3272db","modified":1582088666403},{"_id":"themes/next/languages/hu.yml","hash":"074d069af9aed5ad34fa809bd058a3b9e2d01051","modified":1582088666403},{"_id":"themes/next/languages/id.yml","hash":"6037450ecd02796e08ca2e98037845b7c30c2807","modified":1582088666403},{"_id":"themes/next/languages/it.yml","hash":"ba2c8f51f2f719dabe71b6053c6fe6866161ec66","modified":1582088666403},{"_id":"themes/next/languages/ja.yml","hash":"5e13b521201944815665bd077b65d7ce69622b81","modified":1582088666404},{"_id":"themes/next/languages/ko.yml","hash":"4aa8f3bf06e02879863b19901476cb23ecd2d709","modified":1582088666404},{"_id":"themes/next/languages/ru.yml","hash":"7dcb2aab65a4b202476856f3e004862334229bcb","modified":1582088666404},{"_id":"themes/next/languages/pt-BR.yml","hash":"0660471e067d01ec80962d5721ae282aafff274d","modified":1582088666404},{"_id":"themes/next/languages/pt.yml","hash":"f7516b9d86b52c80bf63d3efc7ee6fd985205001","modified":1582088666404},{"_id":"themes/next/languages/nl.yml","hash":"e27b29c60d88ef4c30de291b595cf8cad639c5d1","modified":1582088666404},{"_id":"themes/next/languages/tr.yml","hash":"145d28f6f051129dc6393affe8f68cd7ba925078","modified":1582088666405},{"_id":"themes/next/languages/zh-CN.yml","hash":"038c3a650d2e3a288be9ba6580564172c50b4289","modified":1582088666406},{"_id":"themes/next/languages/vi.yml","hash":"ffc144f606e171fdd8cdb41808ac36e406015a54","modified":1582088666405},{"_id":"themes/next/languages/uk.yml","hash":"21a573cdf8e26d87d5e32c5555bc645983268abe","modified":1582088666405},{"_id":"themes/next/languages/zh-HK.yml","hash":"2620632caa3c94022d9513ab1971d15512e737e7","modified":1582088666406},{"_id":"themes/next/languages/zh-TW.yml","hash":"0964e90406bbd495e901d6b9d5f10124c8cad950","modified":1582088666406},{"_id":"themes/next/layout/_layout.swig","hash":"29ee038b0d5ffdb45327598733ea968588367769","modified":1582088666406},{"_id":"themes/next/layout/index.swig","hash":"3bc6fb1e9707d74b96e1346d3f03fe6584f764f4","modified":1582088666420},{"_id":"themes/next/layout/category.swig","hash":"c55debb2588e4746b02d31ec249bf0a84fdea260","modified":1582088666419},{"_id":"themes/next/layout/archive.swig","hash":"26526c09a4334099e2141456697696fcd1f9783f","modified":1582088666419},{"_id":"themes/next/layout/page.swig","hash":"e61d64c055b6497a04affc143f47fdd0a6dc495b","modified":1582088666420},{"_id":"themes/next/layout/post.swig","hash":"382d9f9a9b35e1f369585f7f9f9b5dd6fa58d2f0","modified":1582088666420},{"_id":"themes/next/layout/tag.swig","hash":"7ff6e34d557a3da1c6a29ecd97842bf73ff213dc","modified":1582088666420},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1582088666424},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"8ae029084b9ac482adf0fae2a0979dd388476513","modified":1582088666393},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"7a9526f749205c882d672a4f51e6a3033c80ca6e","modified":1582088666393},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"89667adbb85c25716dba607cd7a38191acf60736","modified":1582088666393},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"789a3cceb8f37a4b63b1fb2452a03332a3c365ed","modified":1582088666393},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1582088666398},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1582088666398},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1582088666399},{"_id":"themes/next/docs/ru/README.md","hash":"2b3988e79d96b66640d6a98f0c0e6de9099805e6","modified":1582088666399},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"fe3f5cda1975114884d84bef384a562920d70335","modified":1582088666399},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1582088666399},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1582088666400},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1582088666400},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1582088666400},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1582088666401},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"0b0b9ec6ec4a89e701a3b91f8d7d95752d3e241b","modified":1582088666400},{"_id":"themes/next/docs/zh-CN/README.md","hash":"e5f6668c3a79e4a364931b9b4e5fa92f8c771ec8","modified":1582088666401},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"7f37327bbcae7ed7d04d187fd5e9bc6bbf14926a","modified":1582088666401},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e2c9db54cc9e154e882008fde6588b065fadc9a7","modified":1582088666407},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"815676d904f92748ddf4f529bed2baf066997bc6","modified":1582088666407},{"_id":"themes/next/layout/_macro/post.swig","hash":"a14b72e1507a770d6224943d7d86688aea0578cf","modified":1582088666407},{"_id":"themes/next/layout/_partials/comments.swig","hash":"0c4914a5fd08f15beec71940218c814ad9a89f3f","modified":1582088666407},{"_id":"themes/next/layout/_partials/footer.swig","hash":"1ee6335c12773dc43f8b92136770cb10d460c25c","modified":1582088666408},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1582088666410},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1582088666412},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1582088666412},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"a3462c37ab6d7642b1e95860ea5c4cfbac78efab","modified":1582088666412},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1582088666413},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1582088666414},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1582088666415},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1582088666416},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"dd6bd817cb69b5ad5e9746498146314b54054ff8","modified":1582088666417},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1582088666417},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1582088666411},{"_id":"themes/next/scripts/events/index.js","hash":"9047d8ae2670e43429b16a7919a08a0a0a81afe0","modified":1582088666421},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1582088666423},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1582088666423},{"_id":"themes/next/scripts/filters/locals.js","hash":"5bbfdc1c373542159660b7a68ed0b57ca18ad10b","modified":1582088666423},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1582088666423},{"_id":"themes/next/scripts/filters/post.js","hash":"f2f566f2577c554377fd704442399acdd14a8118","modified":1582088666424},{"_id":"themes/next/scripts/helpers/engine.js","hash":"cb211b6b50913454b1737782e9e2af96cfa40448","modified":1582088666424},{"_id":"themes/next/scripts/helpers/font.js","hash":"32268fb4c59c5b37c1eb1c9582ab630e09e5cc7d","modified":1582088666424},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1582088666424},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"58347687b02f7ab5e64bef07525c8efa97c9e8fb","modified":1582088666424},{"_id":"themes/next/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1582088666425},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1582088666425},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1582088666425},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1582088666425},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1582088666425},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1582088666426},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1582088666425},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1582088666426},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1582088666426},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1582088666426},{"_id":"themes/next/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1582088666444},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1582088666444},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1582088666444},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1582088666445},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1582088666444},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1582088666445},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1582088666445},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1582088666445},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1582088666445},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1582088666446},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1582088666446},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1582088666446},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1582088666446},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1582088666446},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1582088666446},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1582088666446},{"_id":"themes/next/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1582088666447},{"_id":"themes/next/source/js/algolia-search.js","hash":"f31a633c15391ce0095579735a479f3f92622eab","modified":1582088666447},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1582088666447},{"_id":"themes/next/source/js/local-search.js","hash":"0d30f1c0e4d4a1cc26d494808f3f36132d06ae14","modified":1582088666447},{"_id":"themes/next/source/js/next-boot.js","hash":"f7045763e277e685c271bd4b4c37e531d699ac63","modified":1582088666447},{"_id":"themes/next/source/js/utils.js","hash":"4faf7598289774fe091f33fa693b2e6b2ca1e994","modified":1582088666448},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1582088666448},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1582088666439},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1582088666439},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"1638483d2d2dad1da4c841a6fb9f6ee96b850187","modified":1582088666408},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"6cd12613863c3fd7a10c6a81c84f57a770f96566","modified":1582088666408},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"30528a8da30994b1ef9355a72b09b2cd85a7c0e9","modified":1582088666408},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"1ea12d4b9490d9065ebf1b8739b90ce5defd6398","modified":1582088666408},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"e6076865dba066c5f0008e22217efb850d5af69c","modified":1582088666409},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"bbf0c8e42491fac70f4f8165224f1d7d92a040d7","modified":1582088666409},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"54ba9508a901c295a02c8e34e9cece7c7dcad518","modified":1582088666409},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1582088666409},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"a56e4f6ad95c106f361d354f828d1ef4810b1d76","modified":1582088666409},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1582088666410},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"14c33bd544903e74388739599fffe3ecb66ed4b0","modified":1582088666410},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1582088666410},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1582088666410},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1582088666410},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1582088666411},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"d6fa9e4432b87004c5678dfe2d4b2c1f4a702b93","modified":1582088666411},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"2791a8dc20a276704fc8b03f9822f76578a9152d","modified":1582088666411},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"716b78cd90addc4216413719554721cb362b0c18","modified":1582088666411},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1582088666412},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1582088666413},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"a2bb0bec243685e670b60a3d54142950adc03af0","modified":1582088666412},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1582088666413},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1582088666413},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1582088666414},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1582088666414},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1582088666414},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1582088666414},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1582088666415},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1582088666415},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1582088666415},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1582088666415},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1582088666416},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1582088666416},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1582088666416},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1582088666416},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1582088666417},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1582088666416},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"a18a9b52f58c7988c411a819518d8e7715e5fb92","modified":1582088666417},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1582088666417},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1582088666418},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1582088666418},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1582088666418},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1582088666418},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1582088666418},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1582088666418},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"a239f1558d1209012ce4571cbc665fe461291e41","modified":1582088666419},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1582088666419},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"529d752f269afcf8f64e07a1eacd6fda70fb211f","modified":1582088666419},{"_id":"themes/next/scripts/events/lib/config.js","hash":"b205d72a56b1827681f0a260c266e0c02065fd08","modified":1582088666421},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1582088666421},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1582088666421},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1582088666422},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1582088666422},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1582088666422},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"19cbd24880d0fbbd4d5698cd54da598f03b942da","modified":1582088666422},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1582088666422},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1582088666422},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1582088666423},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6a72b5928cdab9526a288177991e4b2aedd028cf","modified":1582088666423},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1582088666439},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0a25f3df1b5c39794365efde387647da81da884a","modified":1582088666439},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1582088666439},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"52550138127ae9ebbe049bcdacd94d767c003855","modified":1582088666443},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"b9d7058db61df7bbd2b58779efe45621a06ffc18","modified":1582088666443},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c261d685c5ed0df34718d94bb2ba977c0ed443e6","modified":1582088666443},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"50bc57e66331c0f15a4527010b4ca3316ac92403","modified":1582088666443},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d4e817e2b238ace5d7ac568ce0c5380196a6d039","modified":1582088666444},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"f068b46f8c305c7436c2767492a6bed42dcd764c","modified":1582088666448},{"_id":"themes/next/source/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1582088666447},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1582088666449},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1582088666448},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1582088666449},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1582088666448},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1582088666449},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1582088666452},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1582088666452},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"990bd301ce2de0a6b936781c58318f3945d81bc2","modified":1582088666433},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"44fe82eadbdbb2f66adda37ac83ebd0f85876bfc","modified":1582088666434},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"d8ba44b8e1a0332c5c1079ff65fc83d2918a5865","modified":1582088666436},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4f7879a50d4608c46cc2061c725a2564597a45bd","modified":1582088666435},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1582088666437},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"3faa8a7cdb05ef3f3b02920d381773dfd54270a5","modified":1582088666436},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1582088666437},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1582088666437},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"8e1cc5e3b20d804a7265f945b877388bffee39eb","modified":1582088666437},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1582088666439},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"80d359661d08b80ad561b97f8508766b3e1f6d01","modified":1582088666427},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"47ee915d7b0a97e74140a25fbfc01c04d6781534","modified":1582088666427},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"112f5e8f1fe5cec4419e87acfbdef0e615ed23f3","modified":1582088666427},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"bc87cea0b534f2d75db60f300b069456f6516d1b","modified":1582088666431},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"170c4598cbbe49cd1527f94158d97d2320a6b906","modified":1582088666431},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1582088666441},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"1693ec6b53758ac15d2c7798c789d6ae8af913ea","modified":1582088666440},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"3646e915b0a55f3b66e41d802b082aba88a76e06","modified":1582088666441},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"a54662bd4cbbe316048a811d3b5c83fb6df63739","modified":1582088666441},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"5ae608ce00ec2d7b9aa4ab2d8dfdf4a73422acc4","modified":1582088666441},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1582088666442},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1582088666442},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"adea92b504d436780c2792af0269f8b7835525f3","modified":1582088666440},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"24a086a6904bbf5355a354403c9b0e6069f7eb01","modified":1582088666440},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"3d52f762577afac1ab50390e555b069408370fe8","modified":1582088666440},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e321bd62f5e04d1fdc101a470ec13604e99816a5","modified":1582088666440},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1582088666441},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"a406ecd03d2d3b0e160b44a42deeae1ed9aa6aa1","modified":1582088666442},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"b797c693378d94160121a2b8d9df0622a76cdbda","modified":1582088666442},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"698f25ad68508450dd8a41f2732d2bab14f8d1fe","modified":1582088666442},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"06098b8f8ea343c434c858207297a47c1275155a","modified":1582088666443},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"0424a1fcffa1ae82fe70935972a894aca885bf9a","modified":1582088666443},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1582088666443},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1582088666449},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1582088666449},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1582088666450},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1582088666451},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"f5821481440a0624c8aec5fc85f093de1527095f","modified":1582088666432},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1582088666432},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"0672ea2acf28dcc2cfc5244da36d3387d71a17cb","modified":1582088666432},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"d5d85d3646d184e0340924addcfd2523fb289d00","modified":1582088666433},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1582088666433},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1582088666433},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"9a418cadb160a11e7203a3964aef4149a54808a5","modified":1582088666433},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1582088666434},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"c26c60317ae9c49ca55779ea89892db90cfbad2e","modified":1582088666433},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1582088666434},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"95339b71ac90553fb1634c536c9749055e0c788a","modified":1582088666434},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1582088666434},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1582088666434},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1582088666435},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"521534f483440434e808f92377bc3fc73667c89a","modified":1582088666435},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1582088666435},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"f9796139bb7cb1d7e59c9c6726e2e063f7e33024","modified":1582088666435},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"9a18b186b08ec220d1b17cf83812bcdd06077814","modified":1582088666435},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1582088666436},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"5e655bc1d9e213e466af2f8358725fdc668fe52d","modified":1582088666436},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"b4923515ca8e44aa62e839ce948f759cfd1f896f","modified":1582088666436},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1582088666437},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1582088666438},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"5bf28a03ef021c27cfd713971caca5a0b9466fd1","modified":1582088666438},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1582088666437},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"1a14c1b92d8a4dd8aabb5949333ac0ac79094c6c","modified":1582088666438},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"d2f0f2171722533bba308f944a2ec727b083582c","modified":1582088666438},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1582088666438},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1582088666438},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1582088666427},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1582088666427},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6336c2b129db802221b1fd75e5fbe8aab85c0a1f","modified":1582088666428},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1582088666428},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1582088666428},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"af182c0d1e52f94280f6108936914f04ed541eee","modified":1582088666428},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"4b84f35e7040f9adb5cc540c366d7f9eb4c48bcc","modified":1582088666428},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"e3ade812b5541eca5b863ad3ff234ea95925bf31","modified":1582088666429},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"60ed14e9ddcb138837ca22efb8886f9bff2a3dd2","modified":1582088666429},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"5d5c022aa3b2f89c2f2a178212338bb64804dd75","modified":1582088666429},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1582088666429},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"bcba503e956e4b737b062faa66341bd880f16c10","modified":1582088666430},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"9df5ba77e6cf36129bddc270407215c23c60ff38","modified":1582088666430},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1582088666430},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1582088666430},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1582088666430},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1582088666430},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"c7939407797acbd1ae0d8bae8e13b2bf045f870e","modified":1582088666431},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1582088666431},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1582088666431},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1582088666431},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"418890a2041e4d623e235890951143d183df6f03","modified":1582088666432},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1582088666432},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1582088666451},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1582088666451},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1582088826475},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1582088826475},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1582088826475},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1582088826475},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1582088826475},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1582088826475},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1582088826475},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1582088826475},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1582088826475},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1582088826475},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1582088826475},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1582088826475},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1582088826475},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1582088826475},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1582088826475},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1582088826475},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1582088826475},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1582088826475},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1582088826475},{"_id":"public/js/algolia-search.js","hash":"f31a633c15391ce0095579735a479f3f92622eab","modified":1582088826475},{"_id":"public/js/next-boot.js","hash":"f7045763e277e685c271bd4b4c37e531d699ac63","modified":1582088826475},{"_id":"public/js/schemes/pisces.js","hash":"f068b46f8c305c7436c2767492a6bed42dcd764c","modified":1582088826475},{"_id":"public/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1582088826475},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1582088826475},{"_id":"public/css/main.css","hash":"dbce509758996fa5d65575b2ea299fe1750d6a86","modified":1582088826475},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1582088826475},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1582088826475},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1582088826475},{"_id":"public/js/local-search.js","hash":"0d30f1c0e4d4a1cc26d494808f3f36132d06ae14","modified":1582088826475},{"_id":"public/js/utils.js","hash":"4faf7598289774fe091f33fa693b2e6b2ca1e994","modified":1582088826475},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1582088826475},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1582088826475},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1582088826475},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1582088826475},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1582088826475},{"_id":"source/_posts/opengl-1.md","hash":"a96d2b61f5af3d58bdbdf90ee4f2e27b52733322","modified":1582091533710},{"_id":"public/2020/02/19/opengl-1/index.html","hash":"724937b47ada7e90bff46d3ade6e86bbba996584","modified":1582091549671}],"Category":[],"Data":[],"Page":[],"Post":[{"_content":"# Hello World\n```\nfun printHello(){\n    println(\"hello world\")\n}\n```\n\n# 基础\n## 变量定义\n* var : 值可以改变\n* val : 值不可以改变  相当于final\n\n## 基本数据类型\n* Int\n* Long\n* Double\n* Float\n\n### 运算\n```\n + - * / 分别代表 加减乘除 \n```\n**特殊用法:**   \n数据类型后接函数调用：\n```\neg:\n\n2.plus(3)\n2.times(3)\n3.div(5)\n\n```\n### 类型转换\n```\nval b2: Byte = 1 // OK, literals are checked statically\nprintln(b2)\n⇒ 1\n\nval i4: Int = b2.toInt() // OK!\nprintln(i4)\n⇒ 1\n\nval i5: String = b2.toString()\nprintln(i5)\n⇒ 1\n\nval i6: Double = b2.toDouble()\nprintln(i6)\n⇒ 1.0\n\n```\n### 数字中的下划线\nKotlin允许使用下划线来分割一个较长的数字，为了代码的可读性。\n```\nval oneMillion = 1_000_000\nval socialSecurityNumber = 999_99_9999L\nval hexBytes = 0xFF_EC_DE_5E\nval bytes = 0b11010010_01101001_10010100_10010010\n```\n\n## 字符串\n### 格式化\n```\nval numberOfFish = 5\nval numberOfPlants = 12\n\nvar str = \"I have $numberOfFish fish\" + \" and $numberOfPlants plants\"\n\nvar str2 = \"I have ${numberOfFish + numberOfPlants} fish and plants\"\n\n```\n## if/else\n### 通用写法\n```\nval numberOfFish = 50\nval numberOfPlants = 23\nif (numberOfFish > numberOfPlants) {\n    println(\"Good ratio!\") \n} else {\n    println(\"Unhealthy ratio\")\n}\n```\n### 高级用法\n#### 区间\n```\nval fish = 50\nif (fish in 1..100) {\n    println(fish)\n}\n```\n#### 多重选择\n```\nwhen (numberOfFish) {\n    0  -> println(\"Empty tank\")\n    in 1..39 -> println(\"Got fish!\")\n    else -> println(\"That's a lot of fish!\")\n}\n```\n等同于\n```\nif (numberOfFish == 0) {\n    println(\"Empty tank\")\n} else if (numberOfFish < 40) {\n    println(\"Got fish!\")\n} else {\n    println(\"That's a lot of fish!\")\n}\n```\n\n## 关于null\n变量默认不能为null，如\n```\nvar rocks: Int = null\n```\n如果想强制设置为null，则应该使用:\n```\nvar marbles:Int?=null\n```\n判断变量是否为空\n```\nvar fishFoodTreats = 6\nif (fishFoodTreats != null) {\n    fishFoodTreats = fishFoodTreats.dec()\n}\n```\n特殊用法: \n```\nvar fishFoodTreats = 6\nfishFoodTreats = fishFoodTreats?.dec()\nfishFoodTreats = fishFoodTreats?.dec() ?: 0\n```\n强制抛出NullException\n```\nval len = s!!.length   // throws NullPointerException if s is null\n```\n\n## 数组和列表\n### list\n定义一个不可改变的list\n```\nval school = listOf(\"mackerel\", \"trout\", \"halibut\")\nprintln(school)\n```\n定义一个可以改变的list，以及删除其中一项\n```\nval myList = mutableListOf(\"tuna\", \"salmon\", \"shark\")\nmyList.remove(\"shark\")\n```\n### Array\n定义一个普通的array\n```\nval school = arrayOf(\"shark\", \"salmon\", \"minnow\")\nprintln(java.util.Arrays.toString(school))\n```\narray中可以拥有不用类型\n```\nval mix = arrayOf(\"fish\", 2)\n```\n\n# 函数\n## main函数\n```\nfun printHello() {\n    println (\"Hello World\")\n}\n\nprintHello()\n```\n## 一切皆value\n\n表达式的执行结果可以作为值放在表达式的右侧\n\n```\nval isUnit = println(\"This is an expression\")\nprintln(isUnit)\n```\n```\nval temperature = 10\nval isHot = if (temperature > 50) true else false\nprintln(isHot)\n```\n```\nval temperature = 10\nval message = \"The water temperature is ${ if (temperature > 50) \"too warm\" else \"OK\" }.\"\nprintln(message)\n```\n\n## when 用法\nkotlin中的when类似于java的switch，具体如下：\n```\nfun fishFood (day : String) : String {\n    return when (day) {\n        \"Monday\" -> \"flakes\"\n        \"Wednesday\" -> \"redworms\"\n        \"Thursday\" -> \"granules\"\n        \"Friday\" -> \"mosquitoes\"\n        \"Sunday\" -> \"plankton\"\n        else -> \"nothing\"\n    }\n}\n\n```\n\n## 函数参数默认值\n类似于C++, kotlin中可以定义一个函数参数中的默认值\n```\nfun swim(speed: String = \"fast\") {\n   println(\"swimming $speed\")\n}\n\nswim()   // uses default speed\nswim(\"slow\")   // positional argument\nswim(speed=\"turtle-like\")   // named parameter\n```\n当有多个参数需要指定默认值时\n```\nfun shouldChangeWater (day: String, temperature: Int = 22, dirty: Int = 20): Boolean {\n    return when {\n        temperature > 30 -> true\n        dirty > 30 -> true\n        day == \"Sunday\" ->  true\n        else -> false\n    }\n}\n```\n \n# 类\n## 创建类\nEg:\n```\npacakge example.myapp\nclass Aquarium{\n    var width: Int = 20\n    var height: Int = 40\n}\n```\n默认类型的属性可以直接方位如:\n```\nmyAquarium.width = 10\n```\n\n## 添加成员函数\n```\nfun printSize(){\n    println(\"hello world\")\n}\n```\n## 添加构造函数\n构造函数不需要在类体内定义一个函数，而是直接可以将构造函数写在类的右边。如：\n```\nclass Aquarium( length: Int = 100 , width: Int = 20 , height: Int = 40){\n    var length: Int = lengh\n    var width: Int = width\n    var height: Int = height\n...\n}\n```\n以上更简便的写法是可以直接指定将构造函数参数变为成员变量, 通过使用var关键字:\n```\nclass Aquarium( var length: Int = 100 ,vat width: Int = 20 ,var height: Int = 40){\n...\n}\n```\n## init函数\n可以在类中加入若干个init块并依次执行.\n```\nclass Aquarium (var length: Int = 100, var width: Int = 20, var height: Int = 40) {\n    init {\n        println(\"aquarium initializing\")\n    }\n    init {\n        // 1 liter = 1000 cm^3\n        println(\"Volume: ${width * length * height / 1000} l\")\n    }\n}\n```\n## 二级构造函数\n一个kotlin类可以拥有除了构造函数和init函数之外的二级构造函数。二级构造函数使用关键字 constructor\n```\n    constructor(numberOfFish: Int) : this() {\n        // 2,000 cm^3 per fish + extra room so water doesn't spill\n        val tank = numberOfFish * 2000 * 1.1\n    }\n```\n## 添加setter和getter\n将一个属性设置setter和getter，可以在获取和赋值时自动调用。\n```\nvar volume: Int\n    get() = width * height * length / 1000\n    set(value) {\n        height = (value * 1000) / (width * length)\n    }\n```\n## 可见性修饰符\n* public : 外部可访问，是每个属性默认的类型。\n* internal : 一个module范围内可以访问。\n* private: 只有类内部可以访问。\n* protected: 类内部和子类可以访问。\n\n## 属性的部分可见性\n如果一个属性想区分读和写的两个权限,可以单独对 setter 和 getter 做private 修饰,\n```\n    var volume: Int\n        get() = width * height * length / 1000\n        private set(value) {\n            height = (value * 1000) / (width * length)\n        }\n```\n## 类的继承\n默认情况下，类不能被继承，同样的属性和方法也不能被子类重写。如想继承需要添加**open**关键字:\n```\nopen class Aquarium (open var length: Int = 100, open var width: Int = 20, open var height: Int = 40) {\n    open var volume: Int\n        get() = width * height * length / 1000\n        set(value) {\n            height = (value * 1000) / (width * length)\n        }\n```","source":"_posts/kotlin.md","raw":"# Hello World\n```\nfun printHello(){\n    println(\"hello world\")\n}\n```\n\n# 基础\n## 变量定义\n* var : 值可以改变\n* val : 值不可以改变  相当于final\n\n## 基本数据类型\n* Int\n* Long\n* Double\n* Float\n\n### 运算\n```\n + - * / 分别代表 加减乘除 \n```\n**特殊用法:**   \n数据类型后接函数调用：\n```\neg:\n\n2.plus(3)\n2.times(3)\n3.div(5)\n\n```\n### 类型转换\n```\nval b2: Byte = 1 // OK, literals are checked statically\nprintln(b2)\n⇒ 1\n\nval i4: Int = b2.toInt() // OK!\nprintln(i4)\n⇒ 1\n\nval i5: String = b2.toString()\nprintln(i5)\n⇒ 1\n\nval i6: Double = b2.toDouble()\nprintln(i6)\n⇒ 1.0\n\n```\n### 数字中的下划线\nKotlin允许使用下划线来分割一个较长的数字，为了代码的可读性。\n```\nval oneMillion = 1_000_000\nval socialSecurityNumber = 999_99_9999L\nval hexBytes = 0xFF_EC_DE_5E\nval bytes = 0b11010010_01101001_10010100_10010010\n```\n\n## 字符串\n### 格式化\n```\nval numberOfFish = 5\nval numberOfPlants = 12\n\nvar str = \"I have $numberOfFish fish\" + \" and $numberOfPlants plants\"\n\nvar str2 = \"I have ${numberOfFish + numberOfPlants} fish and plants\"\n\n```\n## if/else\n### 通用写法\n```\nval numberOfFish = 50\nval numberOfPlants = 23\nif (numberOfFish > numberOfPlants) {\n    println(\"Good ratio!\") \n} else {\n    println(\"Unhealthy ratio\")\n}\n```\n### 高级用法\n#### 区间\n```\nval fish = 50\nif (fish in 1..100) {\n    println(fish)\n}\n```\n#### 多重选择\n```\nwhen (numberOfFish) {\n    0  -> println(\"Empty tank\")\n    in 1..39 -> println(\"Got fish!\")\n    else -> println(\"That's a lot of fish!\")\n}\n```\n等同于\n```\nif (numberOfFish == 0) {\n    println(\"Empty tank\")\n} else if (numberOfFish < 40) {\n    println(\"Got fish!\")\n} else {\n    println(\"That's a lot of fish!\")\n}\n```\n\n## 关于null\n变量默认不能为null，如\n```\nvar rocks: Int = null\n```\n如果想强制设置为null，则应该使用:\n```\nvar marbles:Int?=null\n```\n判断变量是否为空\n```\nvar fishFoodTreats = 6\nif (fishFoodTreats != null) {\n    fishFoodTreats = fishFoodTreats.dec()\n}\n```\n特殊用法: \n```\nvar fishFoodTreats = 6\nfishFoodTreats = fishFoodTreats?.dec()\nfishFoodTreats = fishFoodTreats?.dec() ?: 0\n```\n强制抛出NullException\n```\nval len = s!!.length   // throws NullPointerException if s is null\n```\n\n## 数组和列表\n### list\n定义一个不可改变的list\n```\nval school = listOf(\"mackerel\", \"trout\", \"halibut\")\nprintln(school)\n```\n定义一个可以改变的list，以及删除其中一项\n```\nval myList = mutableListOf(\"tuna\", \"salmon\", \"shark\")\nmyList.remove(\"shark\")\n```\n### Array\n定义一个普通的array\n```\nval school = arrayOf(\"shark\", \"salmon\", \"minnow\")\nprintln(java.util.Arrays.toString(school))\n```\narray中可以拥有不用类型\n```\nval mix = arrayOf(\"fish\", 2)\n```\n\n# 函数\n## main函数\n```\nfun printHello() {\n    println (\"Hello World\")\n}\n\nprintHello()\n```\n## 一切皆value\n\n表达式的执行结果可以作为值放在表达式的右侧\n\n```\nval isUnit = println(\"This is an expression\")\nprintln(isUnit)\n```\n```\nval temperature = 10\nval isHot = if (temperature > 50) true else false\nprintln(isHot)\n```\n```\nval temperature = 10\nval message = \"The water temperature is ${ if (temperature > 50) \"too warm\" else \"OK\" }.\"\nprintln(message)\n```\n\n## when 用法\nkotlin中的when类似于java的switch，具体如下：\n```\nfun fishFood (day : String) : String {\n    return when (day) {\n        \"Monday\" -> \"flakes\"\n        \"Wednesday\" -> \"redworms\"\n        \"Thursday\" -> \"granules\"\n        \"Friday\" -> \"mosquitoes\"\n        \"Sunday\" -> \"plankton\"\n        else -> \"nothing\"\n    }\n}\n\n```\n\n## 函数参数默认值\n类似于C++, kotlin中可以定义一个函数参数中的默认值\n```\nfun swim(speed: String = \"fast\") {\n   println(\"swimming $speed\")\n}\n\nswim()   // uses default speed\nswim(\"slow\")   // positional argument\nswim(speed=\"turtle-like\")   // named parameter\n```\n当有多个参数需要指定默认值时\n```\nfun shouldChangeWater (day: String, temperature: Int = 22, dirty: Int = 20): Boolean {\n    return when {\n        temperature > 30 -> true\n        dirty > 30 -> true\n        day == \"Sunday\" ->  true\n        else -> false\n    }\n}\n```\n \n# 类\n## 创建类\nEg:\n```\npacakge example.myapp\nclass Aquarium{\n    var width: Int = 20\n    var height: Int = 40\n}\n```\n默认类型的属性可以直接方位如:\n```\nmyAquarium.width = 10\n```\n\n## 添加成员函数\n```\nfun printSize(){\n    println(\"hello world\")\n}\n```\n## 添加构造函数\n构造函数不需要在类体内定义一个函数，而是直接可以将构造函数写在类的右边。如：\n```\nclass Aquarium( length: Int = 100 , width: Int = 20 , height: Int = 40){\n    var length: Int = lengh\n    var width: Int = width\n    var height: Int = height\n...\n}\n```\n以上更简便的写法是可以直接指定将构造函数参数变为成员变量, 通过使用var关键字:\n```\nclass Aquarium( var length: Int = 100 ,vat width: Int = 20 ,var height: Int = 40){\n...\n}\n```\n## init函数\n可以在类中加入若干个init块并依次执行.\n```\nclass Aquarium (var length: Int = 100, var width: Int = 20, var height: Int = 40) {\n    init {\n        println(\"aquarium initializing\")\n    }\n    init {\n        // 1 liter = 1000 cm^3\n        println(\"Volume: ${width * length * height / 1000} l\")\n    }\n}\n```\n## 二级构造函数\n一个kotlin类可以拥有除了构造函数和init函数之外的二级构造函数。二级构造函数使用关键字 constructor\n```\n    constructor(numberOfFish: Int) : this() {\n        // 2,000 cm^3 per fish + extra room so water doesn't spill\n        val tank = numberOfFish * 2000 * 1.1\n    }\n```\n## 添加setter和getter\n将一个属性设置setter和getter，可以在获取和赋值时自动调用。\n```\nvar volume: Int\n    get() = width * height * length / 1000\n    set(value) {\n        height = (value * 1000) / (width * length)\n    }\n```\n## 可见性修饰符\n* public : 外部可访问，是每个属性默认的类型。\n* internal : 一个module范围内可以访问。\n* private: 只有类内部可以访问。\n* protected: 类内部和子类可以访问。\n\n## 属性的部分可见性\n如果一个属性想区分读和写的两个权限,可以单独对 setter 和 getter 做private 修饰,\n```\n    var volume: Int\n        get() = width * height * length / 1000\n        private set(value) {\n            height = (value * 1000) / (width * length)\n        }\n```\n## 类的继承\n默认情况下，类不能被继承，同样的属性和方法也不能被子类重写。如想继承需要添加**open**关键字:\n```\nopen class Aquarium (open var length: Int = 100, open var width: Int = 20, open var height: Int = 40) {\n    open var volume: Int\n        get() = width * height * length / 1000\n        set(value) {\n            height = (value * 1000) / (width * length)\n        }\n```","slug":"kotlin","published":1,"date":"2020-02-19T04:58:04.568Z","updated":"2020-02-19T04:58:04.569Z","title":"kotlin","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6suktza00006wvj05jne0a7","content":"<h1 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun printHello()&#123;</span><br><span class=\"line\">    println(&quot;hello world&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h1><h2 id=\"变量定义\"><a href=\"#变量定义\" class=\"headerlink\" title=\"变量定义\"></a>变量定义</h2><ul>\n<li>var : 值可以改变</li>\n<li>val : 值不可以改变  相当于final</li>\n</ul>\n<h2 id=\"基本数据类型\"><a href=\"#基本数据类型\" class=\"headerlink\" title=\"基本数据类型\"></a>基本数据类型</h2><ul>\n<li>Int</li>\n<li>Long</li>\n<li>Double</li>\n<li>Float</li>\n</ul>\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ - * &#x2F; 分别代表 加减乘除</span><br></pre></td></tr></table></figure>\n<p><strong>特殊用法:</strong><br>数据类型后接函数调用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\"></span><br><span class=\"line\">2.plus(3)</span><br><span class=\"line\">2.times(3)</span><br><span class=\"line\">3.div(5)</span><br></pre></td></tr></table></figure>\n<h3 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val b2: Byte &#x3D; 1 &#x2F;&#x2F; OK, literals are checked statically</span><br><span class=\"line\">println(b2)</span><br><span class=\"line\">⇒ 1</span><br><span class=\"line\"></span><br><span class=\"line\">val i4: Int &#x3D; b2.toInt() &#x2F;&#x2F; OK!</span><br><span class=\"line\">println(i4)</span><br><span class=\"line\">⇒ 1</span><br><span class=\"line\"></span><br><span class=\"line\">val i5: String &#x3D; b2.toString()</span><br><span class=\"line\">println(i5)</span><br><span class=\"line\">⇒ 1</span><br><span class=\"line\"></span><br><span class=\"line\">val i6: Double &#x3D; b2.toDouble()</span><br><span class=\"line\">println(i6)</span><br><span class=\"line\">⇒ 1.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"数字中的下划线\"><a href=\"#数字中的下划线\" class=\"headerlink\" title=\"数字中的下划线\"></a>数字中的下划线</h3><p>Kotlin允许使用下划线来分割一个较长的数字，为了代码的可读性。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val oneMillion &#x3D; 1_000_000</span><br><span class=\"line\">val socialSecurityNumber &#x3D; 999_99_9999L</span><br><span class=\"line\">val hexBytes &#x3D; 0xFF_EC_DE_5E</span><br><span class=\"line\">val bytes &#x3D; 0b11010010_01101001_10010100_10010010</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h2><h3 id=\"格式化\"><a href=\"#格式化\" class=\"headerlink\" title=\"格式化\"></a>格式化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val numberOfFish &#x3D; 5</span><br><span class=\"line\">val numberOfPlants &#x3D; 12</span><br><span class=\"line\"></span><br><span class=\"line\">var str &#x3D; &quot;I have $numberOfFish fish&quot; + &quot; and $numberOfPlants plants&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">var str2 &#x3D; &quot;I have $&#123;numberOfFish + numberOfPlants&#125; fish and plants&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"if-else\"><a href=\"#if-else\" class=\"headerlink\" title=\"if/else\"></a>if/else</h2><h3 id=\"通用写法\"><a href=\"#通用写法\" class=\"headerlink\" title=\"通用写法\"></a>通用写法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val numberOfFish &#x3D; 50</span><br><span class=\"line\">val numberOfPlants &#x3D; 23</span><br><span class=\"line\">if (numberOfFish &gt; numberOfPlants) &#123;</span><br><span class=\"line\">    println(&quot;Good ratio!&quot;) </span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    println(&quot;Unhealthy ratio&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h3><h4 id=\"区间\"><a href=\"#区间\" class=\"headerlink\" title=\"区间\"></a>区间</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val fish &#x3D; 50</span><br><span class=\"line\">if (fish in 1..100) &#123;</span><br><span class=\"line\">    println(fish)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"多重选择\"><a href=\"#多重选择\" class=\"headerlink\" title=\"多重选择\"></a>多重选择</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">when (numberOfFish) &#123;</span><br><span class=\"line\">    0  -&gt; println(&quot;Empty tank&quot;)</span><br><span class=\"line\">    in 1..39 -&gt; println(&quot;Got fish!&quot;)</span><br><span class=\"line\">    else -&gt; println(&quot;That&#39;s a lot of fish!&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>等同于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (numberOfFish &#x3D;&#x3D; 0) &#123;</span><br><span class=\"line\">    println(&quot;Empty tank&quot;)</span><br><span class=\"line\">&#125; else if (numberOfFish &lt; 40) &#123;</span><br><span class=\"line\">    println(&quot;Got fish!&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    println(&quot;That&#39;s a lot of fish!&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关于null\"><a href=\"#关于null\" class=\"headerlink\" title=\"关于null\"></a>关于null</h2><p>变量默认不能为null，如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var rocks: Int &#x3D; null</span><br></pre></td></tr></table></figure>\n<p>如果想强制设置为null，则应该使用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var marbles:Int?&#x3D;null</span><br></pre></td></tr></table></figure>\n<p>判断变量是否为空</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var fishFoodTreats &#x3D; 6</span><br><span class=\"line\">if (fishFoodTreats !&#x3D; null) &#123;</span><br><span class=\"line\">    fishFoodTreats &#x3D; fishFoodTreats.dec()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>特殊用法: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var fishFoodTreats &#x3D; 6</span><br><span class=\"line\">fishFoodTreats &#x3D; fishFoodTreats?.dec()</span><br><span class=\"line\">fishFoodTreats &#x3D; fishFoodTreats?.dec() ?: 0</span><br></pre></td></tr></table></figure>\n<p>强制抛出NullException</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val len &#x3D; s!!.length   &#x2F;&#x2F; throws NullPointerException if s is null</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数组和列表\"><a href=\"#数组和列表\" class=\"headerlink\" title=\"数组和列表\"></a>数组和列表</h2><h3 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h3><p>定义一个不可改变的list</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val school &#x3D; listOf(&quot;mackerel&quot;, &quot;trout&quot;, &quot;halibut&quot;)</span><br><span class=\"line\">println(school)</span><br></pre></td></tr></table></figure>\n<p>定义一个可以改变的list，以及删除其中一项</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val myList &#x3D; mutableListOf(&quot;tuna&quot;, &quot;salmon&quot;, &quot;shark&quot;)</span><br><span class=\"line\">myList.remove(&quot;shark&quot;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h3><p>定义一个普通的array</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val school &#x3D; arrayOf(&quot;shark&quot;, &quot;salmon&quot;, &quot;minnow&quot;)</span><br><span class=\"line\">println(java.util.Arrays.toString(school))</span><br></pre></td></tr></table></figure>\n<p>array中可以拥有不用类型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val mix &#x3D; arrayOf(&quot;fish&quot;, 2)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><h2 id=\"main函数\"><a href=\"#main函数\" class=\"headerlink\" title=\"main函数\"></a>main函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun printHello() &#123;</span><br><span class=\"line\">    println (&quot;Hello World&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">printHello()</span><br></pre></td></tr></table></figure>\n<h2 id=\"一切皆value\"><a href=\"#一切皆value\" class=\"headerlink\" title=\"一切皆value\"></a>一切皆value</h2><p>表达式的执行结果可以作为值放在表达式的右侧</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val isUnit &#x3D; println(&quot;This is an expression&quot;)</span><br><span class=\"line\">println(isUnit)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val temperature &#x3D; 10</span><br><span class=\"line\">val isHot &#x3D; if (temperature &gt; 50) true else false</span><br><span class=\"line\">println(isHot)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val temperature &#x3D; 10</span><br><span class=\"line\">val message &#x3D; &quot;The water temperature is $&#123; if (temperature &gt; 50) &quot;too warm&quot; else &quot;OK&quot; &#125;.&quot;</span><br><span class=\"line\">println(message)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"when-用法\"><a href=\"#when-用法\" class=\"headerlink\" title=\"when 用法\"></a>when 用法</h2><p>kotlin中的when类似于java的switch，具体如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun fishFood (day : String) : String &#123;</span><br><span class=\"line\">    return when (day) &#123;</span><br><span class=\"line\">        &quot;Monday&quot; -&gt; &quot;flakes&quot;</span><br><span class=\"line\">        &quot;Wednesday&quot; -&gt; &quot;redworms&quot;</span><br><span class=\"line\">        &quot;Thursday&quot; -&gt; &quot;granules&quot;</span><br><span class=\"line\">        &quot;Friday&quot; -&gt; &quot;mosquitoes&quot;</span><br><span class=\"line\">        &quot;Sunday&quot; -&gt; &quot;plankton&quot;</span><br><span class=\"line\">        else -&gt; &quot;nothing&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数参数默认值\"><a href=\"#函数参数默认值\" class=\"headerlink\" title=\"函数参数默认值\"></a>函数参数默认值</h2><p>类似于C++, kotlin中可以定义一个函数参数中的默认值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun swim(speed: String &#x3D; &quot;fast&quot;) &#123;</span><br><span class=\"line\">   println(&quot;swimming $speed&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">swim()   &#x2F;&#x2F; uses default speed</span><br><span class=\"line\">swim(&quot;slow&quot;)   &#x2F;&#x2F; positional argument</span><br><span class=\"line\">swim(speed&#x3D;&quot;turtle-like&quot;)   &#x2F;&#x2F; named parameter</span><br></pre></td></tr></table></figure>\n<p>当有多个参数需要指定默认值时</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun shouldChangeWater (day: String, temperature: Int &#x3D; 22, dirty: Int &#x3D; 20): Boolean &#123;</span><br><span class=\"line\">    return when &#123;</span><br><span class=\"line\">        temperature &gt; 30 -&gt; true</span><br><span class=\"line\">        dirty &gt; 30 -&gt; true</span><br><span class=\"line\">        day &#x3D;&#x3D; &quot;Sunday&quot; -&gt;  true</span><br><span class=\"line\">        else -&gt; false</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h1><h2 id=\"创建类\"><a href=\"#创建类\" class=\"headerlink\" title=\"创建类\"></a>创建类</h2><p>Eg:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacakge example.myapp</span><br><span class=\"line\">class Aquarium&#123;</span><br><span class=\"line\">    var width: Int &#x3D; 20</span><br><span class=\"line\">    var height: Int &#x3D; 40</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>默认类型的属性可以直接方位如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myAquarium.width &#x3D; 10</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加成员函数\"><a href=\"#添加成员函数\" class=\"headerlink\" title=\"添加成员函数\"></a>添加成员函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun printSize()&#123;</span><br><span class=\"line\">    println(&quot;hello world&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加构造函数\"><a href=\"#添加构造函数\" class=\"headerlink\" title=\"添加构造函数\"></a>添加构造函数</h2><p>构造函数不需要在类体内定义一个函数，而是直接可以将构造函数写在类的右边。如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Aquarium( length: Int &#x3D; 100 , width: Int &#x3D; 20 , height: Int &#x3D; 40)&#123;</span><br><span class=\"line\">    var length: Int &#x3D; lengh</span><br><span class=\"line\">    var width: Int &#x3D; width</span><br><span class=\"line\">    var height: Int &#x3D; height</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上更简便的写法是可以直接指定将构造函数参数变为成员变量, 通过使用var关键字:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Aquarium( var length: Int &#x3D; 100 ,vat width: Int &#x3D; 20 ,var height: Int &#x3D; 40)&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"init函数\"><a href=\"#init函数\" class=\"headerlink\" title=\"init函数\"></a>init函数</h2><p>可以在类中加入若干个init块并依次执行.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Aquarium (var length: Int &#x3D; 100, var width: Int &#x3D; 20, var height: Int &#x3D; 40) &#123;</span><br><span class=\"line\">    init &#123;</span><br><span class=\"line\">        println(&quot;aquarium initializing&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    init &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 1 liter &#x3D; 1000 cm^3</span><br><span class=\"line\">        println(&quot;Volume: $&#123;width * length * height &#x2F; 1000&#125; l&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二级构造函数\"><a href=\"#二级构造函数\" class=\"headerlink\" title=\"二级构造函数\"></a>二级构造函数</h2><p>一个kotlin类可以拥有除了构造函数和init函数之外的二级构造函数。二级构造函数使用关键字 constructor</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">constructor(numberOfFish: Int) : this() &#123;</span><br><span class=\"line\">    &#x2F;&#x2F; 2,000 cm^3 per fish + extra room so water doesn&#39;t spill</span><br><span class=\"line\">    val tank &#x3D; numberOfFish * 2000 * 1.1</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加setter和getter\"><a href=\"#添加setter和getter\" class=\"headerlink\" title=\"添加setter和getter\"></a>添加setter和getter</h2><p>将一个属性设置setter和getter，可以在获取和赋值时自动调用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var volume: Int</span><br><span class=\"line\">    get() &#x3D; width * height * length &#x2F; 1000</span><br><span class=\"line\">    set(value) &#123;</span><br><span class=\"line\">        height &#x3D; (value * 1000) &#x2F; (width * length)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"可见性修饰符\"><a href=\"#可见性修饰符\" class=\"headerlink\" title=\"可见性修饰符\"></a>可见性修饰符</h2><ul>\n<li>public : 外部可访问，是每个属性默认的类型。</li>\n<li>internal : 一个module范围内可以访问。</li>\n<li>private: 只有类内部可以访问。</li>\n<li>protected: 类内部和子类可以访问。</li>\n</ul>\n<h2 id=\"属性的部分可见性\"><a href=\"#属性的部分可见性\" class=\"headerlink\" title=\"属性的部分可见性\"></a>属性的部分可见性</h2><p>如果一个属性想区分读和写的两个权限,可以单独对 setter 和 getter 做private 修饰,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var volume: Int</span><br><span class=\"line\">    get() &#x3D; width * height * length &#x2F; 1000</span><br><span class=\"line\">    private set(value) &#123;</span><br><span class=\"line\">        height &#x3D; (value * 1000) &#x2F; (width * length)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"类的继承\"><a href=\"#类的继承\" class=\"headerlink\" title=\"类的继承\"></a>类的继承</h2><p>默认情况下，类不能被继承，同样的属性和方法也不能被子类重写。如想继承需要添加<strong>open</strong>关键字:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open class Aquarium (open var length: Int &#x3D; 100, open var width: Int &#x3D; 20, open var height: Int &#x3D; 40) &#123;</span><br><span class=\"line\">    open var volume: Int</span><br><span class=\"line\">        get() &#x3D; width * height * length &#x2F; 1000</span><br><span class=\"line\">        set(value) &#123;</span><br><span class=\"line\">            height &#x3D; (value * 1000) &#x2F; (width * length)</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun printHello()&#123;</span><br><span class=\"line\">    println(&quot;hello world&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h1><h2 id=\"变量定义\"><a href=\"#变量定义\" class=\"headerlink\" title=\"变量定义\"></a>变量定义</h2><ul>\n<li>var : 值可以改变</li>\n<li>val : 值不可以改变  相当于final</li>\n</ul>\n<h2 id=\"基本数据类型\"><a href=\"#基本数据类型\" class=\"headerlink\" title=\"基本数据类型\"></a>基本数据类型</h2><ul>\n<li>Int</li>\n<li>Long</li>\n<li>Double</li>\n<li>Float</li>\n</ul>\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ - * &#x2F; 分别代表 加减乘除</span><br></pre></td></tr></table></figure>\n<p><strong>特殊用法:</strong><br>数据类型后接函数调用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\"></span><br><span class=\"line\">2.plus(3)</span><br><span class=\"line\">2.times(3)</span><br><span class=\"line\">3.div(5)</span><br></pre></td></tr></table></figure>\n<h3 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val b2: Byte &#x3D; 1 &#x2F;&#x2F; OK, literals are checked statically</span><br><span class=\"line\">println(b2)</span><br><span class=\"line\">⇒ 1</span><br><span class=\"line\"></span><br><span class=\"line\">val i4: Int &#x3D; b2.toInt() &#x2F;&#x2F; OK!</span><br><span class=\"line\">println(i4)</span><br><span class=\"line\">⇒ 1</span><br><span class=\"line\"></span><br><span class=\"line\">val i5: String &#x3D; b2.toString()</span><br><span class=\"line\">println(i5)</span><br><span class=\"line\">⇒ 1</span><br><span class=\"line\"></span><br><span class=\"line\">val i6: Double &#x3D; b2.toDouble()</span><br><span class=\"line\">println(i6)</span><br><span class=\"line\">⇒ 1.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"数字中的下划线\"><a href=\"#数字中的下划线\" class=\"headerlink\" title=\"数字中的下划线\"></a>数字中的下划线</h3><p>Kotlin允许使用下划线来分割一个较长的数字，为了代码的可读性。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val oneMillion &#x3D; 1_000_000</span><br><span class=\"line\">val socialSecurityNumber &#x3D; 999_99_9999L</span><br><span class=\"line\">val hexBytes &#x3D; 0xFF_EC_DE_5E</span><br><span class=\"line\">val bytes &#x3D; 0b11010010_01101001_10010100_10010010</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h2><h3 id=\"格式化\"><a href=\"#格式化\" class=\"headerlink\" title=\"格式化\"></a>格式化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val numberOfFish &#x3D; 5</span><br><span class=\"line\">val numberOfPlants &#x3D; 12</span><br><span class=\"line\"></span><br><span class=\"line\">var str &#x3D; &quot;I have $numberOfFish fish&quot; + &quot; and $numberOfPlants plants&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">var str2 &#x3D; &quot;I have $&#123;numberOfFish + numberOfPlants&#125; fish and plants&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"if-else\"><a href=\"#if-else\" class=\"headerlink\" title=\"if/else\"></a>if/else</h2><h3 id=\"通用写法\"><a href=\"#通用写法\" class=\"headerlink\" title=\"通用写法\"></a>通用写法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val numberOfFish &#x3D; 50</span><br><span class=\"line\">val numberOfPlants &#x3D; 23</span><br><span class=\"line\">if (numberOfFish &gt; numberOfPlants) &#123;</span><br><span class=\"line\">    println(&quot;Good ratio!&quot;) </span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    println(&quot;Unhealthy ratio&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h3><h4 id=\"区间\"><a href=\"#区间\" class=\"headerlink\" title=\"区间\"></a>区间</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val fish &#x3D; 50</span><br><span class=\"line\">if (fish in 1..100) &#123;</span><br><span class=\"line\">    println(fish)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"多重选择\"><a href=\"#多重选择\" class=\"headerlink\" title=\"多重选择\"></a>多重选择</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">when (numberOfFish) &#123;</span><br><span class=\"line\">    0  -&gt; println(&quot;Empty tank&quot;)</span><br><span class=\"line\">    in 1..39 -&gt; println(&quot;Got fish!&quot;)</span><br><span class=\"line\">    else -&gt; println(&quot;That&#39;s a lot of fish!&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>等同于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (numberOfFish &#x3D;&#x3D; 0) &#123;</span><br><span class=\"line\">    println(&quot;Empty tank&quot;)</span><br><span class=\"line\">&#125; else if (numberOfFish &lt; 40) &#123;</span><br><span class=\"line\">    println(&quot;Got fish!&quot;)</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    println(&quot;That&#39;s a lot of fish!&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关于null\"><a href=\"#关于null\" class=\"headerlink\" title=\"关于null\"></a>关于null</h2><p>变量默认不能为null，如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var rocks: Int &#x3D; null</span><br></pre></td></tr></table></figure>\n<p>如果想强制设置为null，则应该使用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var marbles:Int?&#x3D;null</span><br></pre></td></tr></table></figure>\n<p>判断变量是否为空</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var fishFoodTreats &#x3D; 6</span><br><span class=\"line\">if (fishFoodTreats !&#x3D; null) &#123;</span><br><span class=\"line\">    fishFoodTreats &#x3D; fishFoodTreats.dec()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>特殊用法: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var fishFoodTreats &#x3D; 6</span><br><span class=\"line\">fishFoodTreats &#x3D; fishFoodTreats?.dec()</span><br><span class=\"line\">fishFoodTreats &#x3D; fishFoodTreats?.dec() ?: 0</span><br></pre></td></tr></table></figure>\n<p>强制抛出NullException</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val len &#x3D; s!!.length   &#x2F;&#x2F; throws NullPointerException if s is null</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数组和列表\"><a href=\"#数组和列表\" class=\"headerlink\" title=\"数组和列表\"></a>数组和列表</h2><h3 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h3><p>定义一个不可改变的list</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val school &#x3D; listOf(&quot;mackerel&quot;, &quot;trout&quot;, &quot;halibut&quot;)</span><br><span class=\"line\">println(school)</span><br></pre></td></tr></table></figure>\n<p>定义一个可以改变的list，以及删除其中一项</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val myList &#x3D; mutableListOf(&quot;tuna&quot;, &quot;salmon&quot;, &quot;shark&quot;)</span><br><span class=\"line\">myList.remove(&quot;shark&quot;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h3><p>定义一个普通的array</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val school &#x3D; arrayOf(&quot;shark&quot;, &quot;salmon&quot;, &quot;minnow&quot;)</span><br><span class=\"line\">println(java.util.Arrays.toString(school))</span><br></pre></td></tr></table></figure>\n<p>array中可以拥有不用类型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val mix &#x3D; arrayOf(&quot;fish&quot;, 2)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><h2 id=\"main函数\"><a href=\"#main函数\" class=\"headerlink\" title=\"main函数\"></a>main函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun printHello() &#123;</span><br><span class=\"line\">    println (&quot;Hello World&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">printHello()</span><br></pre></td></tr></table></figure>\n<h2 id=\"一切皆value\"><a href=\"#一切皆value\" class=\"headerlink\" title=\"一切皆value\"></a>一切皆value</h2><p>表达式的执行结果可以作为值放在表达式的右侧</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val isUnit &#x3D; println(&quot;This is an expression&quot;)</span><br><span class=\"line\">println(isUnit)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val temperature &#x3D; 10</span><br><span class=\"line\">val isHot &#x3D; if (temperature &gt; 50) true else false</span><br><span class=\"line\">println(isHot)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val temperature &#x3D; 10</span><br><span class=\"line\">val message &#x3D; &quot;The water temperature is $&#123; if (temperature &gt; 50) &quot;too warm&quot; else &quot;OK&quot; &#125;.&quot;</span><br><span class=\"line\">println(message)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"when-用法\"><a href=\"#when-用法\" class=\"headerlink\" title=\"when 用法\"></a>when 用法</h2><p>kotlin中的when类似于java的switch，具体如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun fishFood (day : String) : String &#123;</span><br><span class=\"line\">    return when (day) &#123;</span><br><span class=\"line\">        &quot;Monday&quot; -&gt; &quot;flakes&quot;</span><br><span class=\"line\">        &quot;Wednesday&quot; -&gt; &quot;redworms&quot;</span><br><span class=\"line\">        &quot;Thursday&quot; -&gt; &quot;granules&quot;</span><br><span class=\"line\">        &quot;Friday&quot; -&gt; &quot;mosquitoes&quot;</span><br><span class=\"line\">        &quot;Sunday&quot; -&gt; &quot;plankton&quot;</span><br><span class=\"line\">        else -&gt; &quot;nothing&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数参数默认值\"><a href=\"#函数参数默认值\" class=\"headerlink\" title=\"函数参数默认值\"></a>函数参数默认值</h2><p>类似于C++, kotlin中可以定义一个函数参数中的默认值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun swim(speed: String &#x3D; &quot;fast&quot;) &#123;</span><br><span class=\"line\">   println(&quot;swimming $speed&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">swim()   &#x2F;&#x2F; uses default speed</span><br><span class=\"line\">swim(&quot;slow&quot;)   &#x2F;&#x2F; positional argument</span><br><span class=\"line\">swim(speed&#x3D;&quot;turtle-like&quot;)   &#x2F;&#x2F; named parameter</span><br></pre></td></tr></table></figure>\n<p>当有多个参数需要指定默认值时</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun shouldChangeWater (day: String, temperature: Int &#x3D; 22, dirty: Int &#x3D; 20): Boolean &#123;</span><br><span class=\"line\">    return when &#123;</span><br><span class=\"line\">        temperature &gt; 30 -&gt; true</span><br><span class=\"line\">        dirty &gt; 30 -&gt; true</span><br><span class=\"line\">        day &#x3D;&#x3D; &quot;Sunday&quot; -&gt;  true</span><br><span class=\"line\">        else -&gt; false</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h1><h2 id=\"创建类\"><a href=\"#创建类\" class=\"headerlink\" title=\"创建类\"></a>创建类</h2><p>Eg:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacakge example.myapp</span><br><span class=\"line\">class Aquarium&#123;</span><br><span class=\"line\">    var width: Int &#x3D; 20</span><br><span class=\"line\">    var height: Int &#x3D; 40</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>默认类型的属性可以直接方位如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myAquarium.width &#x3D; 10</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加成员函数\"><a href=\"#添加成员函数\" class=\"headerlink\" title=\"添加成员函数\"></a>添加成员函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fun printSize()&#123;</span><br><span class=\"line\">    println(&quot;hello world&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加构造函数\"><a href=\"#添加构造函数\" class=\"headerlink\" title=\"添加构造函数\"></a>添加构造函数</h2><p>构造函数不需要在类体内定义一个函数，而是直接可以将构造函数写在类的右边。如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Aquarium( length: Int &#x3D; 100 , width: Int &#x3D; 20 , height: Int &#x3D; 40)&#123;</span><br><span class=\"line\">    var length: Int &#x3D; lengh</span><br><span class=\"line\">    var width: Int &#x3D; width</span><br><span class=\"line\">    var height: Int &#x3D; height</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上更简便的写法是可以直接指定将构造函数参数变为成员变量, 通过使用var关键字:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Aquarium( var length: Int &#x3D; 100 ,vat width: Int &#x3D; 20 ,var height: Int &#x3D; 40)&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"init函数\"><a href=\"#init函数\" class=\"headerlink\" title=\"init函数\"></a>init函数</h2><p>可以在类中加入若干个init块并依次执行.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Aquarium (var length: Int &#x3D; 100, var width: Int &#x3D; 20, var height: Int &#x3D; 40) &#123;</span><br><span class=\"line\">    init &#123;</span><br><span class=\"line\">        println(&quot;aquarium initializing&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    init &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 1 liter &#x3D; 1000 cm^3</span><br><span class=\"line\">        println(&quot;Volume: $&#123;width * length * height &#x2F; 1000&#125; l&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二级构造函数\"><a href=\"#二级构造函数\" class=\"headerlink\" title=\"二级构造函数\"></a>二级构造函数</h2><p>一个kotlin类可以拥有除了构造函数和init函数之外的二级构造函数。二级构造函数使用关键字 constructor</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">constructor(numberOfFish: Int) : this() &#123;</span><br><span class=\"line\">    &#x2F;&#x2F; 2,000 cm^3 per fish + extra room so water doesn&#39;t spill</span><br><span class=\"line\">    val tank &#x3D; numberOfFish * 2000 * 1.1</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加setter和getter\"><a href=\"#添加setter和getter\" class=\"headerlink\" title=\"添加setter和getter\"></a>添加setter和getter</h2><p>将一个属性设置setter和getter，可以在获取和赋值时自动调用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var volume: Int</span><br><span class=\"line\">    get() &#x3D; width * height * length &#x2F; 1000</span><br><span class=\"line\">    set(value) &#123;</span><br><span class=\"line\">        height &#x3D; (value * 1000) &#x2F; (width * length)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"可见性修饰符\"><a href=\"#可见性修饰符\" class=\"headerlink\" title=\"可见性修饰符\"></a>可见性修饰符</h2><ul>\n<li>public : 外部可访问，是每个属性默认的类型。</li>\n<li>internal : 一个module范围内可以访问。</li>\n<li>private: 只有类内部可以访问。</li>\n<li>protected: 类内部和子类可以访问。</li>\n</ul>\n<h2 id=\"属性的部分可见性\"><a href=\"#属性的部分可见性\" class=\"headerlink\" title=\"属性的部分可见性\"></a>属性的部分可见性</h2><p>如果一个属性想区分读和写的两个权限,可以单独对 setter 和 getter 做private 修饰,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var volume: Int</span><br><span class=\"line\">    get() &#x3D; width * height * length &#x2F; 1000</span><br><span class=\"line\">    private set(value) &#123;</span><br><span class=\"line\">        height &#x3D; (value * 1000) &#x2F; (width * length)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"类的继承\"><a href=\"#类的继承\" class=\"headerlink\" title=\"类的继承\"></a>类的继承</h2><p>默认情况下，类不能被继承，同样的属性和方法也不能被子类重写。如想继承需要添加<strong>open</strong>关键字:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open class Aquarium (open var length: Int &#x3D; 100, open var width: Int &#x3D; 20, open var height: Int &#x3D; 40) &#123;</span><br><span class=\"line\">    open var volume: Int</span><br><span class=\"line\">        get() &#x3D; width * height * length &#x2F; 1000</span><br><span class=\"line\">        set(value) &#123;</span><br><span class=\"line\">            height &#x3D; (value * 1000) &#x2F; (width * length)</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>"},{"_content":"# 初识Opengl程序\n## opengl 基本结构\n\n\n\n```mermaid\ngraph LR;\nA[aa bb]-->B(wo);\nA-->C((我是C));\nB-->D>我是D];\nC-->D;\nD-->E{我是E};\nC-->E;\n2-->E;\n_-->E;\n```\n\n* 初始化物体渲染所对应的状态\n* 设置需要渲染的物体\n## 基本概念\n* 渲染:  表示计算机从模型创建到最终图像的过程。  \n* 着色器: 看成是专为 GPU 编译的一种小型程序。  \n## 命名规则\n### 函数命名\n* gl 开头前缀  \n* 参数后缀, 举例  \n    * glUniform2f :  代表参数是两个 float类型  \n    * glUniform2fv:  代表参数是一个拥有两个float类型的vector\n### 变量命令\nGL_XXX\n## Opengl管线过程\n* 顶点数据\n* 顶点着色器\n* 细分控制着色器\n* 细分计算着色器\n* 几何着色器\n* 图元设置\n* 裁剪和剪切\n* 光栅化\n* 片元着色器\n\n## 向OpenGL传输数据\n### 缓存对象 BufferObject\n由OpenGL维护的一块内存区域,典型函数为**glNamedBufferStorage**,用来设置缓存大小。\n### 顶点着色\n每个顶点，OpenGL都会调用一个顶点着色器来处理数据。顶点着色器可能会非常简单，例如只是传递顶点数据到下一个着色阶段;还有可能是经过计算，来得到顶点在屏幕中的位置。\n### 细分着色\n处理顶点着色器之后的数据，使用patch来描述一个物体的形状，会生成几何图元。\n### 几何着色\n对每一个几何图元进行进一步的处理，并生成新的图元。\n### 图元装配\n将顶点和几何图元之间组织起来，准备下一步操作。\n### 剪切\n保证Viewport之外的顶点不会被绘制\n### 光栅化\n是把顶点数据转换为片元的过程,具有将图转化为一个个栅格组成的图象的作用，特点是每个元素对应帧缓冲区中的一像素。\n### 片元着色\n决定某个片元的颜色应该是什么\n\n# Opengl初始化过程\n## glCreateVertexArrays\n```c\nvoid  glCreateVertexArrays(GLsizei n , GLuint* arrays);\n```\n返回N个未使用的对象名到arrays中,用作顶点对象。\n## glBindeVertexArray\n```c\nvoid  glBindeVertexArray(GLuint array); \n```\n绑定有上面Create函数创建的单个array对象。如果array不为0, 则执行bind操作，如果为0，则OpenGL将不再使用之前绑定的顶点。\n## glDeleteVertexArrays\n```c\nvoid glDeleteVertexArrays(glSizei n , const GLuint *arrrays);\n```\n删除arrays 顶点数组\n## gllsVertexArray\n```c\nvoid   glDeleteVertexArrays(Gluint array);\n```\n检查某个array是否在create之后没有被delete.\n\n## 小结\n以上是关于顶点的一些操作， 其对应的函数组  glCreate*,glBind*,glDelete*,glls* 会在其他地方有类似的应用。\n\n\n\n\n\n\n\n\n","source":"_posts/opengl-1.md","raw":"# 初识Opengl程序\n## opengl 基本结构\n\n\n\n```mermaid\ngraph LR;\nA[aa bb]-->B(wo);\nA-->C((我是C));\nB-->D>我是D];\nC-->D;\nD-->E{我是E};\nC-->E;\n2-->E;\n_-->E;\n```\n\n* 初始化物体渲染所对应的状态\n* 设置需要渲染的物体\n## 基本概念\n* 渲染:  表示计算机从模型创建到最终图像的过程。  \n* 着色器: 看成是专为 GPU 编译的一种小型程序。  \n## 命名规则\n### 函数命名\n* gl 开头前缀  \n* 参数后缀, 举例  \n    * glUniform2f :  代表参数是两个 float类型  \n    * glUniform2fv:  代表参数是一个拥有两个float类型的vector\n### 变量命令\nGL_XXX\n## Opengl管线过程\n* 顶点数据\n* 顶点着色器\n* 细分控制着色器\n* 细分计算着色器\n* 几何着色器\n* 图元设置\n* 裁剪和剪切\n* 光栅化\n* 片元着色器\n\n## 向OpenGL传输数据\n### 缓存对象 BufferObject\n由OpenGL维护的一块内存区域,典型函数为**glNamedBufferStorage**,用来设置缓存大小。\n### 顶点着色\n每个顶点，OpenGL都会调用一个顶点着色器来处理数据。顶点着色器可能会非常简单，例如只是传递顶点数据到下一个着色阶段;还有可能是经过计算，来得到顶点在屏幕中的位置。\n### 细分着色\n处理顶点着色器之后的数据，使用patch来描述一个物体的形状，会生成几何图元。\n### 几何着色\n对每一个几何图元进行进一步的处理，并生成新的图元。\n### 图元装配\n将顶点和几何图元之间组织起来，准备下一步操作。\n### 剪切\n保证Viewport之外的顶点不会被绘制\n### 光栅化\n是把顶点数据转换为片元的过程,具有将图转化为一个个栅格组成的图象的作用，特点是每个元素对应帧缓冲区中的一像素。\n### 片元着色\n决定某个片元的颜色应该是什么\n\n# Opengl初始化过程\n## glCreateVertexArrays\n```c\nvoid  glCreateVertexArrays(GLsizei n , GLuint* arrays);\n```\n返回N个未使用的对象名到arrays中,用作顶点对象。\n## glBindeVertexArray\n```c\nvoid  glBindeVertexArray(GLuint array); \n```\n绑定有上面Create函数创建的单个array对象。如果array不为0, 则执行bind操作，如果为0，则OpenGL将不再使用之前绑定的顶点。\n## glDeleteVertexArrays\n```c\nvoid glDeleteVertexArrays(glSizei n , const GLuint *arrrays);\n```\n删除arrays 顶点数组\n## gllsVertexArray\n```c\nvoid   glDeleteVertexArrays(Gluint array);\n```\n检查某个array是否在create之后没有被delete.\n\n## 小结\n以上是关于顶点的一些操作， 其对应的函数组  glCreate*,glBind*,glDelete*,glls* 会在其他地方有类似的应用。\n\n\n\n\n\n\n\n\n","slug":"opengl-1","published":1,"date":"2020-02-19T05:25:56.185Z","updated":"2020-02-19T05:52:13.710Z","title":"opengl-1","_id":"ck6svvey60000l1vjewu919lh","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"初识Opengl程序\"><a href=\"#初识Opengl程序\" class=\"headerlink\" title=\"初识Opengl程序\"></a>初识Opengl程序</h1><h2 id=\"opengl-基本结构\"><a href=\"#opengl-基本结构\" class=\"headerlink\" title=\"opengl 基本结构\"></a>opengl 基本结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR;</span><br><span class=\"line\">A[aa bb]--&gt;B(wo);</span><br><span class=\"line\">A--&gt;C((我是C));</span><br><span class=\"line\">B--&gt;D&gt;我是D];</span><br><span class=\"line\">C--&gt;D;</span><br><span class=\"line\">D--&gt;E&#123;我是E&#125;;</span><br><span class=\"line\">C--&gt;E;</span><br><span class=\"line\">2--&gt;E;</span><br><span class=\"line\">_--&gt;E;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>初始化物体渲染所对应的状态</li>\n<li>设置需要渲染的物体<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2></li>\n<li>渲染:  表示计算机从模型创建到最终图像的过程。  </li>\n<li>着色器: 看成是专为 GPU 编译的一种小型程序。  <h2 id=\"命名规则\"><a href=\"#命名规则\" class=\"headerlink\" title=\"命名规则\"></a>命名规则</h2><h3 id=\"函数命名\"><a href=\"#函数命名\" class=\"headerlink\" title=\"函数命名\"></a>函数命名</h3></li>\n<li>gl 开头前缀  </li>\n<li>参数后缀, 举例  <ul>\n<li>glUniform2f :  代表参数是两个 float类型  </li>\n<li>glUniform2fv:  代表参数是一个拥有两个float类型的vector<h3 id=\"变量命令\"><a href=\"#变量命令\" class=\"headerlink\" title=\"变量命令\"></a>变量命令</h3>GL_XXX<h2 id=\"Opengl管线过程\"><a href=\"#Opengl管线过程\" class=\"headerlink\" title=\"Opengl管线过程\"></a>Opengl管线过程</h2></li>\n</ul>\n</li>\n<li>顶点数据</li>\n<li>顶点着色器</li>\n<li>细分控制着色器</li>\n<li>细分计算着色器</li>\n<li>几何着色器</li>\n<li>图元设置</li>\n<li>裁剪和剪切</li>\n<li>光栅化</li>\n<li>片元着色器</li>\n</ul>\n<h2 id=\"向OpenGL传输数据\"><a href=\"#向OpenGL传输数据\" class=\"headerlink\" title=\"向OpenGL传输数据\"></a>向OpenGL传输数据</h2><h3 id=\"缓存对象-BufferObject\"><a href=\"#缓存对象-BufferObject\" class=\"headerlink\" title=\"缓存对象 BufferObject\"></a>缓存对象 BufferObject</h3><p>由OpenGL维护的一块内存区域,典型函数为<strong>glNamedBufferStorage</strong>,用来设置缓存大小。</p>\n<h3 id=\"顶点着色\"><a href=\"#顶点着色\" class=\"headerlink\" title=\"顶点着色\"></a>顶点着色</h3><p>每个顶点，OpenGL都会调用一个顶点着色器来处理数据。顶点着色器可能会非常简单，例如只是传递顶点数据到下一个着色阶段;还有可能是经过计算，来得到顶点在屏幕中的位置。</p>\n<h3 id=\"细分着色\"><a href=\"#细分着色\" class=\"headerlink\" title=\"细分着色\"></a>细分着色</h3><p>处理顶点着色器之后的数据，使用patch来描述一个物体的形状，会生成几何图元。</p>\n<h3 id=\"几何着色\"><a href=\"#几何着色\" class=\"headerlink\" title=\"几何着色\"></a>几何着色</h3><p>对每一个几何图元进行进一步的处理，并生成新的图元。</p>\n<h3 id=\"图元装配\"><a href=\"#图元装配\" class=\"headerlink\" title=\"图元装配\"></a>图元装配</h3><p>将顶点和几何图元之间组织起来，准备下一步操作。</p>\n<h3 id=\"剪切\"><a href=\"#剪切\" class=\"headerlink\" title=\"剪切\"></a>剪切</h3><p>保证Viewport之外的顶点不会被绘制</p>\n<h3 id=\"光栅化\"><a href=\"#光栅化\" class=\"headerlink\" title=\"光栅化\"></a>光栅化</h3><p>是把顶点数据转换为片元的过程,具有将图转化为一个个栅格组成的图象的作用，特点是每个元素对应帧缓冲区中的一像素。</p>\n<h3 id=\"片元着色\"><a href=\"#片元着色\" class=\"headerlink\" title=\"片元着色\"></a>片元着色</h3><p>决定某个片元的颜色应该是什么</p>\n<h1 id=\"Opengl初始化过程\"><a href=\"#Opengl初始化过程\" class=\"headerlink\" title=\"Opengl初始化过程\"></a>Opengl初始化过程</h1><h2 id=\"glCreateVertexArrays\"><a href=\"#glCreateVertexArrays\" class=\"headerlink\" title=\"glCreateVertexArrays\"></a>glCreateVertexArrays</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>  <span class=\"title\">glCreateVertexArrays</span><span class=\"params\">(GLsizei n , GLuint* arrays)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>返回N个未使用的对象名到arrays中,用作顶点对象。</p>\n<h2 id=\"glBindeVertexArray\"><a href=\"#glBindeVertexArray\" class=\"headerlink\" title=\"glBindeVertexArray\"></a>glBindeVertexArray</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>  <span class=\"title\">glBindeVertexArray</span><span class=\"params\">(GLuint <span class=\"built_in\">array</span>)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>绑定有上面Create函数创建的单个array对象。如果array不为0, 则执行bind操作，如果为0，则OpenGL将不再使用之前绑定的顶点。</p>\n<h2 id=\"glDeleteVertexArrays\"><a href=\"#glDeleteVertexArrays\" class=\"headerlink\" title=\"glDeleteVertexArrays\"></a>glDeleteVertexArrays</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDeleteVertexArrays</span><span class=\"params\">(glSizei n , <span class=\"keyword\">const</span> GLuint *arrrays)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>删除arrays 顶点数组</p>\n<h2 id=\"gllsVertexArray\"><a href=\"#gllsVertexArray\" class=\"headerlink\" title=\"gllsVertexArray\"></a>gllsVertexArray</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>   <span class=\"title\">glDeleteVertexArrays</span><span class=\"params\">(Gluint <span class=\"built_in\">array</span>)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>检查某个array是否在create之后没有被delete.</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>以上是关于顶点的一些操作， 其对应的函数组  glCreate<em>,glBind</em>,glDelete<em>,glls</em> 会在其他地方有类似的应用。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"初识Opengl程序\"><a href=\"#初识Opengl程序\" class=\"headerlink\" title=\"初识Opengl程序\"></a>初识Opengl程序</h1><h2 id=\"opengl-基本结构\"><a href=\"#opengl-基本结构\" class=\"headerlink\" title=\"opengl 基本结构\"></a>opengl 基本结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR;</span><br><span class=\"line\">A[aa bb]--&gt;B(wo);</span><br><span class=\"line\">A--&gt;C((我是C));</span><br><span class=\"line\">B--&gt;D&gt;我是D];</span><br><span class=\"line\">C--&gt;D;</span><br><span class=\"line\">D--&gt;E&#123;我是E&#125;;</span><br><span class=\"line\">C--&gt;E;</span><br><span class=\"line\">2--&gt;E;</span><br><span class=\"line\">_--&gt;E;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>初始化物体渲染所对应的状态</li>\n<li>设置需要渲染的物体<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2></li>\n<li>渲染:  表示计算机从模型创建到最终图像的过程。  </li>\n<li>着色器: 看成是专为 GPU 编译的一种小型程序。  <h2 id=\"命名规则\"><a href=\"#命名规则\" class=\"headerlink\" title=\"命名规则\"></a>命名规则</h2><h3 id=\"函数命名\"><a href=\"#函数命名\" class=\"headerlink\" title=\"函数命名\"></a>函数命名</h3></li>\n<li>gl 开头前缀  </li>\n<li>参数后缀, 举例  <ul>\n<li>glUniform2f :  代表参数是两个 float类型  </li>\n<li>glUniform2fv:  代表参数是一个拥有两个float类型的vector<h3 id=\"变量命令\"><a href=\"#变量命令\" class=\"headerlink\" title=\"变量命令\"></a>变量命令</h3>GL_XXX<h2 id=\"Opengl管线过程\"><a href=\"#Opengl管线过程\" class=\"headerlink\" title=\"Opengl管线过程\"></a>Opengl管线过程</h2></li>\n</ul>\n</li>\n<li>顶点数据</li>\n<li>顶点着色器</li>\n<li>细分控制着色器</li>\n<li>细分计算着色器</li>\n<li>几何着色器</li>\n<li>图元设置</li>\n<li>裁剪和剪切</li>\n<li>光栅化</li>\n<li>片元着色器</li>\n</ul>\n<h2 id=\"向OpenGL传输数据\"><a href=\"#向OpenGL传输数据\" class=\"headerlink\" title=\"向OpenGL传输数据\"></a>向OpenGL传输数据</h2><h3 id=\"缓存对象-BufferObject\"><a href=\"#缓存对象-BufferObject\" class=\"headerlink\" title=\"缓存对象 BufferObject\"></a>缓存对象 BufferObject</h3><p>由OpenGL维护的一块内存区域,典型函数为<strong>glNamedBufferStorage</strong>,用来设置缓存大小。</p>\n<h3 id=\"顶点着色\"><a href=\"#顶点着色\" class=\"headerlink\" title=\"顶点着色\"></a>顶点着色</h3><p>每个顶点，OpenGL都会调用一个顶点着色器来处理数据。顶点着色器可能会非常简单，例如只是传递顶点数据到下一个着色阶段;还有可能是经过计算，来得到顶点在屏幕中的位置。</p>\n<h3 id=\"细分着色\"><a href=\"#细分着色\" class=\"headerlink\" title=\"细分着色\"></a>细分着色</h3><p>处理顶点着色器之后的数据，使用patch来描述一个物体的形状，会生成几何图元。</p>\n<h3 id=\"几何着色\"><a href=\"#几何着色\" class=\"headerlink\" title=\"几何着色\"></a>几何着色</h3><p>对每一个几何图元进行进一步的处理，并生成新的图元。</p>\n<h3 id=\"图元装配\"><a href=\"#图元装配\" class=\"headerlink\" title=\"图元装配\"></a>图元装配</h3><p>将顶点和几何图元之间组织起来，准备下一步操作。</p>\n<h3 id=\"剪切\"><a href=\"#剪切\" class=\"headerlink\" title=\"剪切\"></a>剪切</h3><p>保证Viewport之外的顶点不会被绘制</p>\n<h3 id=\"光栅化\"><a href=\"#光栅化\" class=\"headerlink\" title=\"光栅化\"></a>光栅化</h3><p>是把顶点数据转换为片元的过程,具有将图转化为一个个栅格组成的图象的作用，特点是每个元素对应帧缓冲区中的一像素。</p>\n<h3 id=\"片元着色\"><a href=\"#片元着色\" class=\"headerlink\" title=\"片元着色\"></a>片元着色</h3><p>决定某个片元的颜色应该是什么</p>\n<h1 id=\"Opengl初始化过程\"><a href=\"#Opengl初始化过程\" class=\"headerlink\" title=\"Opengl初始化过程\"></a>Opengl初始化过程</h1><h2 id=\"glCreateVertexArrays\"><a href=\"#glCreateVertexArrays\" class=\"headerlink\" title=\"glCreateVertexArrays\"></a>glCreateVertexArrays</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>  <span class=\"title\">glCreateVertexArrays</span><span class=\"params\">(GLsizei n , GLuint* arrays)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>返回N个未使用的对象名到arrays中,用作顶点对象。</p>\n<h2 id=\"glBindeVertexArray\"><a href=\"#glBindeVertexArray\" class=\"headerlink\" title=\"glBindeVertexArray\"></a>glBindeVertexArray</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>  <span class=\"title\">glBindeVertexArray</span><span class=\"params\">(GLuint <span class=\"built_in\">array</span>)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>绑定有上面Create函数创建的单个array对象。如果array不为0, 则执行bind操作，如果为0，则OpenGL将不再使用之前绑定的顶点。</p>\n<h2 id=\"glDeleteVertexArrays\"><a href=\"#glDeleteVertexArrays\" class=\"headerlink\" title=\"glDeleteVertexArrays\"></a>glDeleteVertexArrays</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">glDeleteVertexArrays</span><span class=\"params\">(glSizei n , <span class=\"keyword\">const</span> GLuint *arrrays)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>删除arrays 顶点数组</p>\n<h2 id=\"gllsVertexArray\"><a href=\"#gllsVertexArray\" class=\"headerlink\" title=\"gllsVertexArray\"></a>gllsVertexArray</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>   <span class=\"title\">glDeleteVertexArrays</span><span class=\"params\">(Gluint <span class=\"built_in\">array</span>)</span></span>;</span><br></pre></td></tr></table></figure>\n<p>检查某个array是否在create之后没有被delete.</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>以上是关于顶点的一些操作， 其对应的函数组  glCreate<em>,glBind</em>,glDelete<em>,glls</em> 会在其他地方有类似的应用。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}